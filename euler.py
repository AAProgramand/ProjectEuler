#https://projecteuler.net

#%% Ejercicio 1. Multiples of 3 and 5
"""
If we list all the natural numbers below 10 that are multiples of 3 or 5, we 
get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
"""
multiplos = []

for i in range(1,1000):
    if i % 3 ==0 or i % 5 ==0:
        multiplos.append(i)
        suma =sum(multiplos)
print(suma)


#%% Ejercicio 2. Even Fibonacci numbers
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four 
million, find the sum of the even-valued terms.
"""

def multiplos(maximo, multiplo1, multiplo2):
	caja = sum(i for i in range(maximo) if (i % multiplo1 ==0 or i % multiplo2==0))
	return (caja)

def fibonacci(maximo):
	box, x, y = 0,1,2
	while x <= maximo:
		if x%2==0:
			box +=x
		x,y = y, x+y

	print(box)

"""
#¿Y si no sólo son pares?
def fibonacci(maximo, typeofnumber):
	if typeofnumber == "even":
		box, x, y = 0,1,2
			while x <= maximo:
				if x%2==0:
					box +=x
				x,y = y, x+y

			print(box)

	elif typeofnumber =="odd":
		box, x, y = 0,1,2
			while x <= maximo:
				if x%2!=0:
					box +=x
				x,y = y, x+y

			print(box)
"""

#Otra solucion del ejercicio 2
resultado = 0
suma = 0
j = 1
fibonacci = []
pares = set()

while resultado <= 4000000:
    resultado = suma + j
    suma = j 
    j = resultado
    fibonacci.append(resultado)

    for i in fibonacci: 
        if i % 2== 0:
            pares.add(i)
            fin = sum(pares)
print(fin)












def soluciones(problema):
	path = "https://github.com/milioe/Project_euler/blob/master/{number}_overview.pdf"
	complete = path.format(number=problema)
	print(complete)





